{
    "docs": [
        {
            "location": "/",
            "text": "Expressions r\u00e9glui\u00e8res (m\u00e9mo)\n\u00b6\n\n\nM\u00e9mo sur les expressions r\u00e9glui\u00e8res.",
            "title": "Accueil"
        },
        {
            "location": "/#expressions-regluieres-memo",
            "text": "M\u00e9mo sur les expressions r\u00e9glui\u00e8res.",
            "title": "Expressions r\u00e9glui\u00e8res (m\u00e9mo)"
        },
        {
            "location": "/caracteres/",
            "text": "Caract\u00e8res\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\\\\n\n\nLe caract\u00e8re anti-slash\n\n\n\n\n\n\n\\\\a\n\n\nLe caract\u00e8re sonnette \n\\u0007\n\n\n\n\n\n\n\\\\b\n\n\nBackspace \n\\u0008\n\n\n\n\n\n\n\\\\e\n\n\nLe caract\u00e8re d'\u00e9chappement \n\\u001B\n\n\n\n\n\n\n\\f\n\n\nFormfeed \n\\u000C\n\n\n\n\n\n\n\\n\n\n\nLe caract\u00e8re de nouvelle ligne \n\\u000A\n\n\n\n\n\n\n\\r\n\n\nLe caract\u00e8re de retour en d\u00e9but de ligne \n\\u000D\n\n\n\n\n\n\n\\t\n\n\nLe caract\u00e8re de tabulation \n\\u0009\n\n\n\n\n\n\n\\\\v\n\n\nVertical tabulation \n\\u000B\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\\\cx\n\n\nLe caract\u00e8re de contr\u00f4le ASCII correspondant \u00e0 \nx\n\n\n\n\n\n\n\\0\n\n\nnull\n\n\n\n\n\n\n\\0n\n\n\nLe caract\u00e8re de code ASCII octal \nn\n avec (0\u2264\nn\n\u22647)\n\n\n\n\n\n\n\\0nn\n\n\nLe caract\u00e8re de code ASCII octal \nnn\n avec (0\u2264\nn\n\u2264)\n\n\n\n\n\n\n\\0mnn\n\n\nLe caract\u00e8re de code ASCII octal \nmnn\n avec (0\u2264\nm\n\u22643 et 0\u2264\nn\n\u22647)\n\n\n\n\n\n\n\\0hh\n\n\nLe caract\u00e8re de code ASCII hexadecimal \n0xhh\n\n\n\n\n\n\n\\0hhhh\n\n\nLe caract\u00e8re de code ASCII hexadecimal \n0xhhhh\n\n\n\n\n\n\n\\\\xnn\n\n\nLe caract\u00e8re de code ASCII hexa \nxxxx\n\n\n\n\n\n\n\\uxxxx\n\n\nLe caract\u00e8re de code Unicode hexa \nxxxx",
            "title": "Caract\u00e8res"
        },
        {
            "location": "/caracteres/#caracteres",
            "text": "\\\\  Le caract\u00e8re anti-slash    \\\\a  Le caract\u00e8re sonnette  \\u0007    \\\\b  Backspace  \\u0008    \\\\e  Le caract\u00e8re d'\u00e9chappement  \\u001B    \\f  Formfeed  \\u000C    \\n  Le caract\u00e8re de nouvelle ligne  \\u000A    \\r  Le caract\u00e8re de retour en d\u00e9but de ligne  \\u000D    \\t  Le caract\u00e8re de tabulation  \\u0009    \\\\v  Vertical tabulation  \\u000B              \\\\cx  Le caract\u00e8re de contr\u00f4le ASCII correspondant \u00e0  x    \\0  null    \\0n  Le caract\u00e8re de code ASCII octal  n  avec (0\u2264 n \u22647)    \\0nn  Le caract\u00e8re de code ASCII octal  nn  avec (0\u2264 n \u2264)    \\0mnn  Le caract\u00e8re de code ASCII octal  mnn  avec (0\u2264 m \u22643 et 0\u2264 n \u22647)    \\0hh  Le caract\u00e8re de code ASCII hexadecimal  0xhh    \\0hhhh  Le caract\u00e8re de code ASCII hexadecimal  0xhhhh    \\\\xnn  Le caract\u00e8re de code ASCII hexa  xxxx    \\uxxxx  Le caract\u00e8re de code Unicode hexa  xxxx",
            "title": "Caract\u00e8res"
        },
        {
            "location": "/meta-caracteres/",
            "text": "M\u00e9ta-caract\u00e8res\n\u00b6\n\n\nStandard\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.\n\n\nRemplace n'importe quel caract\u00e8re, sauf la fin de ligne.\n\n\n\n\n\n\n?\n\n\n0 ou une fois l'expression pr\u00e9c\u00e9dente.\n\n\n\n\n\n\n*\n\n\nOp\u00e9rateur de Kleene : 0, 1 ou plusieurs fois l'expression pr\u00e9c\u00e9dente.\n\n\n\n\n\n\n+\n\n\n1 ou plusieurs fois l'expression pr\u00e9c\u00e9dente.\n\n\n\n\n\n\n[]\n\n\nClasses de caract\u00e8res\n\n\n\n\n\n\n{}\n\n\nQuantificateur.\n\n\n\n\n\n\n^\n\n\nN\u00e9gation.\n\n\n\n\n\n\n|\n\n\nOp\u00e9rateur 'ou'.\n\n\n\n\n\n\n-\n\n\nPlage de caract\u00e8res contigus.\n\n\n\n\n\n\n\\\n\n\nLe caract\u00e8re qui suit n'est plus consid\u00e9r\u00e9 comme un m\u00e9ta-caract\u00e8re.\n\n\n\n\n\n\n\\Q \u2026 \\E\n\n\nLe(s) caract\u00e8re(s) qui suivent ne seront plus consid\u00e9r\u00e9 comme un m\u00e9ta-caract\u00e8re.\n\n\n\n\n\n\n\n\nSp\u00e9cificateurs de fronti\u00e8re\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n^\n\n\nD\u00e9but de ligne. (en mode multiligne )\n\n\n\n\n\n\n$\n\n\nFin de ligne. (en mode multiligne )\n\n\n\n\n\n\n\\b\n\n\nExtr\u00e9mit\u00e9 de mot.\n\n\n\n\n\n\n\\B\n\n\nExtr\u00e9mit\u00e9 de non mot.\n\n\n\n\n\n\n\\A\n\n\nLe d\u00e9but de la s\u00e9quence \u00e0 analyser.\n\n\n\n\n\n\n\\G\n\n\nL'analyse du motif qui suit \\G suit exactement l'analyse pr\u00e9c\u00e9dente du motif.\n\n\n\n\n\n\n\\z\n\n\nLa fin de la s\u00e9quence \u00e0 analyser.\n\n\n\n\n\n\n\\Z\n\n\nLa fin de la s\u00e9quence \u00e0 analyser, moins le caract\u00e8re final.\n\n\n\n\n\n\n\\<\n\n\nLe d\u00e9but d'un mot\n\n\n\n\n\n\n\\>\n\n\nLa fin d'un mot",
            "title": "Meta-caract\u00e8res"
        },
        {
            "location": "/meta-caracteres/#meta-caracteres",
            "text": "",
            "title": "M\u00e9ta-caract\u00e8res"
        },
        {
            "location": "/meta-caracteres/#standard",
            "text": ".  Remplace n'importe quel caract\u00e8re, sauf la fin de ligne.    ?  0 ou une fois l'expression pr\u00e9c\u00e9dente.    *  Op\u00e9rateur de Kleene : 0, 1 ou plusieurs fois l'expression pr\u00e9c\u00e9dente.    +  1 ou plusieurs fois l'expression pr\u00e9c\u00e9dente.    []  Classes de caract\u00e8res    {}  Quantificateur.    ^  N\u00e9gation.    |  Op\u00e9rateur 'ou'.    -  Plage de caract\u00e8res contigus.    \\  Le caract\u00e8re qui suit n'est plus consid\u00e9r\u00e9 comme un m\u00e9ta-caract\u00e8re.    \\Q \u2026 \\E  Le(s) caract\u00e8re(s) qui suivent ne seront plus consid\u00e9r\u00e9 comme un m\u00e9ta-caract\u00e8re.",
            "title": "Standard"
        },
        {
            "location": "/meta-caracteres/#specificateurs-de-frontiere",
            "text": "^  D\u00e9but de ligne. (en mode multiligne )    $  Fin de ligne. (en mode multiligne )    \\b  Extr\u00e9mit\u00e9 de mot.    \\B  Extr\u00e9mit\u00e9 de non mot.    \\A  Le d\u00e9but de la s\u00e9quence \u00e0 analyser.    \\G  L'analyse du motif qui suit \\G suit exactement l'analyse pr\u00e9c\u00e9dente du motif.    \\z  La fin de la s\u00e9quence \u00e0 analyser.    \\Z  La fin de la s\u00e9quence \u00e0 analyser, moins le caract\u00e8re final.    \\<  Le d\u00e9but d'un mot    \\>  La fin d'un mot",
            "title": "Sp\u00e9cificateurs de fronti\u00e8re"
        },
        {
            "location": "/assertions/",
            "text": "Assertion (Look-ahead \u2013 Look-behind)\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(?=)\n\n\nAssertion avant positive (positive lookahead)\n\n\n\n\n\n\n(?!)\n\n\nAssertion avant n\u00e9gative (negative lookahead)\n\n\n\n\n\n\n(?<=)\n\n\nAssertion arri\u00e8re positive (positive lookbehind)\n\n\n\n\n\n\n(?<!)\n\n\nAssertion arri\u00e8re n\u00e9gative (negative lookbehind)\n\n\n\n\n\n\n\n\nAssertion avant positive (positive lookahead)\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelement(?=pattern)\n\n\nPermet de v\u00e9rifier si un \u00e9l\u00e9ment est suivi d'un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.\n\n\n\n\n\n\n(?=pattern)element\n\n\nPermet de v\u00e9rifier si un \u00e9l\u00e9ment commence par un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.\n\n\n\n\n\n\n\n\nExemples :\n\n\n\n\nExpression : \n(?=ma)\\b\\w{5,}\\b\n\n\nCible : \nmaison mais maisonnette carotte concombre ta\n\n\nR\u00e9sultat : 2 match.\n\n\n\n\nTrouve \nmaison\n et \nmaisonnette\n, soit un mot de 5 caract\u00e8res 'mot' ou plus commen\u00e7ant par \nma\n.\n\n\n\n\n\n\nExpression : \n(?=255)(\\d{1,3}\\.){3}\\d{1,3}\n\n\n\n\n\n\nTrouve les ip commen\u00e7ant par 255.\n\n\n\n\n\n\nExpression :\n\\b\\w+\\b(?=, mais)\n\n\n\n\nCible : \nBah oui, mais bon alors voil\u00e0! oui, ok mais et alors?\n\n\nR\u00e9sultat : 1 match.\n\n\nTrouve \noui\n, le pattern entre parenth\u00e8ses qui le suit n'est pas captur\u00e9.\n\n\n\n\nAssertion avant n\u00e9gative (negative lookahead)\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nelement(?!pattern)\n\n\nPermet de v\u00e9rifier si un \u00e9l\u00e9ment n'est pas suivi d'un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.\n\n\n\n\n\n\n(?!pattern)element\n\n\nPermet de v\u00e9rifier si un \u00e9l\u00e9ment ne commence pas par un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.\n\n\n\n\n\n\n\n\nExemples :\n\n\n\n\nExpression : \n(?!ma)\\b\\w{3,}\\b\n\n\nCible : \nmaison mais maisonnette carotte concombre ta\n\n\nR\u00e9sultat : 2 matches.\n\n\n\n\nTrouve \ncarotte\n et \nconcombre\n, soit un mot de 3 caract\u00e8res 'mot' ou plus ne commen\u00e7ant pas par \nma\n.\n\n\n\n\n\n\nExpression : \n(?!255)(\\d{1,3}\\.){3}\\d{1,3}\n\n\n\n\n\n\nTrouve les ip ne commen\u00e7ant pas par 255.\n\n\n\n\n\n\nExpression : \n\\b\\w{3}\\b(?!, mais)\n\n\n\n\nCible : \nBah oui, mais bon alors voil\u00e0! oui, ok mais et alors?\n\n\nR\u00e9sultat : 3 matches.\n\n\nTrouve \nbah\n, \nbon\n et \noui\n, mais le premier '\noui\n n'a pas \u00e9t\u00e9 captur\u00e9 car il est suivi du pattern.\n\n\n\n\nAssertion arri\u00e8re positive (positive lookbehind)\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(?<=pattern)element\n\n\nPermet de v\u00e9rifier si un \u00e9l\u00e9ment est pr\u00e9c\u00e9d\u00e9 d'un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.\n\n\n\n\n\n\nelement(?<=pattern)\n\n\nPermet de v\u00e9rifier si un \u00e9l\u00e9ment se termine par un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.\n\n\n\n\n\n\n\n\nExemples :\n\n\n\n\nExpression : \n\\b\\w{4,}\\b(?<=n)\n\n\nCible : \nmaison mais maisonnette carotte concombre ta\n\n\n\n\nTrouve \nmaison\n, soit un mot de 4 caract\u00e8res 'mot' ou plus se terminant par \nn\n.\n\n\n\n\n\n\nExpression : \n(?<=oui, )\\b\\w{4}\\b\n\n\n\n\nCible : \nBah oui, mais bon alors voil\u00e0! oui, ok mais et alors?\n\n\nR\u00e9sultat : 1 match.\n\n\nTrouve \nmais\n, car c'est le seul mot de 4 lettres pr\u00e9c\u00e9d\u00e9 de \noui,\n.\n\n\n\n\nAssertion arri\u00e8re n\u00e9gative (negative lookbehind)\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(?<!pattern)element\n\n\nPermet de v\u00e9rifier si un \u00e9l\u00e9ment n'est pas pr\u00e9c\u00e9d\u00e9 d'un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.\n\n\n\n\n\n\nelement(?<!pattern)\n\n\nPermet de v\u00e9rifier si un \u00e9l\u00e9ment se termine pas par un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.\n\n\n\n\n\n\n\n\nExemples :\n\n\n\n\nExpression : \n\\b\\w{4,}\\b(?<!n)\n\n\nCible : \nmaison mais maisonnette carotte concombre ta\n\n\n\n\nTrouve \nmais\n, \nmaisonnette\n, \ncarotte\n et \nconcombre\n, soit un mot de 4 caract\u00e8res 'mot' ou plus se terminant pas par \nn\n.\n\n\n\n\n\n\nExpression : \n(?<!oui, )\\b\\w{2}\\b\n\n\n\n\nCible : \nBah oui, mais bon alors voil\u00e0! oui, ok mais et alors?\n\n\nR\u00e9sultat : 1 match.\n\n\nTrouve \net\n, car c'est le seul mot de 2 lettres qui n'est pas pr\u00e9c\u00e9d\u00e9 de \noui,\n.",
            "title": "Assertions"
        },
        {
            "location": "/assertions/#assertion-look-ahead-look-behind",
            "text": "(?=)  Assertion avant positive (positive lookahead)    (?!)  Assertion avant n\u00e9gative (negative lookahead)    (?<=)  Assertion arri\u00e8re positive (positive lookbehind)    (?<!)  Assertion arri\u00e8re n\u00e9gative (negative lookbehind)",
            "title": "Assertion (Look-ahead \u2013 Look-behind)"
        },
        {
            "location": "/assertions/#assertion-avant-positive-positive-lookahead",
            "text": "element(?=pattern)  Permet de v\u00e9rifier si un \u00e9l\u00e9ment est suivi d'un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.    (?=pattern)element  Permet de v\u00e9rifier si un \u00e9l\u00e9ment commence par un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.     Exemples :   Expression :  (?=ma)\\b\\w{5,}\\b  Cible :  maison mais maisonnette carotte concombre ta  R\u00e9sultat : 2 match.   Trouve  maison  et  maisonnette , soit un mot de 5 caract\u00e8res 'mot' ou plus commen\u00e7ant par  ma .    Expression :  (?=255)(\\d{1,3}\\.){3}\\d{1,3}    Trouve les ip commen\u00e7ant par 255.    Expression : \\b\\w+\\b(?=, mais)   Cible :  Bah oui, mais bon alors voil\u00e0! oui, ok mais et alors?  R\u00e9sultat : 1 match.  Trouve  oui , le pattern entre parenth\u00e8ses qui le suit n'est pas captur\u00e9.",
            "title": "Assertion avant positive (positive lookahead)"
        },
        {
            "location": "/assertions/#assertion-avant-negative-negative-lookahead",
            "text": "element(?!pattern)  Permet de v\u00e9rifier si un \u00e9l\u00e9ment n'est pas suivi d'un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.    (?!pattern)element  Permet de v\u00e9rifier si un \u00e9l\u00e9ment ne commence pas par un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.     Exemples :   Expression :  (?!ma)\\b\\w{3,}\\b  Cible :  maison mais maisonnette carotte concombre ta  R\u00e9sultat : 2 matches.   Trouve  carotte  et  concombre , soit un mot de 3 caract\u00e8res 'mot' ou plus ne commen\u00e7ant pas par  ma .    Expression :  (?!255)(\\d{1,3}\\.){3}\\d{1,3}    Trouve les ip ne commen\u00e7ant pas par 255.    Expression :  \\b\\w{3}\\b(?!, mais)   Cible :  Bah oui, mais bon alors voil\u00e0! oui, ok mais et alors?  R\u00e9sultat : 3 matches.  Trouve  bah ,  bon  et  oui , mais le premier ' oui  n'a pas \u00e9t\u00e9 captur\u00e9 car il est suivi du pattern.",
            "title": "Assertion avant n\u00e9gative (negative lookahead)"
        },
        {
            "location": "/assertions/#assertion-arriere-positive-positive-lookbehind",
            "text": "(?<=pattern)element  Permet de v\u00e9rifier si un \u00e9l\u00e9ment est pr\u00e9c\u00e9d\u00e9 d'un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.    element(?<=pattern)  Permet de v\u00e9rifier si un \u00e9l\u00e9ment se termine par un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.     Exemples :   Expression :  \\b\\w{4,}\\b(?<=n)  Cible :  maison mais maisonnette carotte concombre ta   Trouve  maison , soit un mot de 4 caract\u00e8res 'mot' ou plus se terminant par  n .    Expression :  (?<=oui, )\\b\\w{4}\\b   Cible :  Bah oui, mais bon alors voil\u00e0! oui, ok mais et alors?  R\u00e9sultat : 1 match.  Trouve  mais , car c'est le seul mot de 4 lettres pr\u00e9c\u00e9d\u00e9 de  oui, .",
            "title": "Assertion arri\u00e8re positive (positive lookbehind)"
        },
        {
            "location": "/assertions/#assertion-arriere-negative-negative-lookbehind",
            "text": "(?<!pattern)element  Permet de v\u00e9rifier si un \u00e9l\u00e9ment n'est pas pr\u00e9c\u00e9d\u00e9 d'un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.    element(?<!pattern)  Permet de v\u00e9rifier si un \u00e9l\u00e9ment se termine pas par un pattern sp\u00e9cifique avant de capturer cet \u00e9l\u00e9ment.     Exemples :   Expression :  \\b\\w{4,}\\b(?<!n)  Cible :  maison mais maisonnette carotte concombre ta   Trouve  mais ,  maisonnette ,  carotte  et  concombre , soit un mot de 4 caract\u00e8res 'mot' ou plus se terminant pas par  n .    Expression :  (?<!oui, )\\b\\w{2}\\b   Cible :  Bah oui, mais bon alors voil\u00e0! oui, ok mais et alors?  R\u00e9sultat : 1 match.  Trouve  et , car c'est le seul mot de 2 lettres qui n'est pas pr\u00e9c\u00e9d\u00e9 de  oui, .",
            "title": "Assertion arri\u00e8re n\u00e9gative (negative lookbehind)"
        },
        {
            "location": "/ensembles/",
            "text": "Ensembles\n\u00b6\n\n\n\n\n\n\n\n\n\n\nExpressions\n\n\nR\u00e9sultat\n\n\n\n\n\n\n\n\n\n\nsimple class\n\n\n[abc]\n\n\na\n, \nb\n, or \nc\n\n\n\n\n\n\nnegation\n\n\n[^abc]\n\n\nAny character except \na\n, \nb\n, or \nc\n\n\n\n\n\n\nrange\n\n\n[a-zA-Z]\n\n\na\n through \nz\n, or \nA\n through \nZ\n, inclusive\n\n\n\n\n\n\nunion\n\n\n[a-d[m-p]]\n\n\na\n through \nd\n, or \nm\n through \np\n: \n[a-dm-p]\n\n\n\n\n\n\nintersection\n\n\n[a-z&&[def]]\n\n\nd\n, \ne\n, or \nf\n\n\n\n\n\n\nsubtraction\n\n\n[a-z&&[^bc]]\n\n\na\n through \nz\n, except for \nb\n and \nc\n: \n[ad-z]\n\n\n\n\n\n\nsubtraction\n\n\n[a-z&&[^m-p]]\n\n\na\n through \nz\n, and not \nm\n through \np\n: \n[a-lq-z]",
            "title": "Ensembles"
        },
        {
            "location": "/ensembles/#ensembles",
            "text": "Expressions  R\u00e9sultat      simple class  [abc]  a ,  b , or  c    negation  [^abc]  Any character except  a ,  b , or  c    range  [a-zA-Z]  a  through  z , or  A  through  Z , inclusive    union  [a-d[m-p]]  a  through  d , or  m  through  p :  [a-dm-p]    intersection  [a-z&&[def]]  d ,  e , or  f    subtraction  [a-z&&[^bc]]  a  through  z , except for  b  and  c :  [ad-z]    subtraction  [a-z&&[^m-p]]  a  through  z , and not  m  through  p :  [a-lq-z]",
            "title": "Ensembles"
        },
        {
            "location": "/classes-de-caracteres/",
            "text": "Classes de caract\u00e8res\n\u00b6\n\n\nBasique\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\d\n\n\n[0-9]\n\n\nUn chiffre \n[\\p{Nd}]\n\n\n\n\n\n\n\\D\n\n\n[^0-9]\n\n\nun caract\u00e8re qui n'est pas un chiffre\n\n\n\n\n\n\n\\s\n\n\n[ \\t\\n\\r\\f\\x0B]\n\n\nUn caract\u00e8re blanc (espace, tab, new line...)\n\n\n\n\n\n\n\\S\n\n\n[^\\s]\n\n\nUn caract\u00e8re non blanc\n\n\n\n\n\n\n\\w\n\n\n[a-zA-Z_0-9]\n\n\nUn caract\u00e8re de mot. \n[\\p{Ll}\\p{Lu}\\p{Lt}\\p{Lo}\\p{Nd}\\p{Pc}]\n\n\n\n\n\n\n\\W\n\n\n[^\\w]\n\n\nUn caract\u00e8re qui n'est pas un caract\u00e8re de mot\n\n\n\n\n\n\n\\O\n\n\n\n\nUn chiffre octal\n\n\n\n\n\n\n\\c\n\n\n\n\nCaract\u00e8re de contr\u00f4le\n\n\n\n\n\n\n\n\nPOSIX\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\p{Alnum}\n\n\nAlphanumeric characters\n\n\n\n\n\n\n\\p{Alpha}\n\n\nAlphabetic characters\n\n\n\n\n\n\n\\p{ASCII}\n\n\nASCII characters\n\n\n\n\n\n\n\\p{Blank}\n\n\nSpace and tab characters\n\n\n\n\n\n\n\\p{Cntrl}\n\n\nControl characters\n\n\n\n\n\n\n\\p{Digit}\n\n\nNumeric characters\n\n\n\n\n\n\n\\p{Graph}\n\n\nprintable and visible (without spaces)\n\n\n\n\n\n\n\\p{Lower}\n\n\nLower-case alphabetic\n\n\n\n\n\n\n\\p{Print}\n\n\nPrintable characters (with spaces)\n\n\n\n\n\n\n\\p{Punct}\n\n\nPunctuation characters\n\n\n\n\n\n\n\\p{Space}\n\n\nAll whitespace characters, including line breaks\n\n\n\n\n\n\n\\p{Upper}\n\n\nUpper-case alphabetic\n\n\n\n\n\n\n\\p{XDigit}\n\n\nHexadecimal digits\n\n\n\n\n\n\n\n\nUnicode\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\p{Cc}\n\n\ncontrol\n\n\nan ASCII \n0x00..0x1F\n or Latin-1\n0x80..0x9F\n control character.\n\n\n\n\n\n\n\\p{Cf}\n\n\nformat\n\n\ninvisible formatting indicator.\n\n\n\n\n\n\n\\p{Cn}\n\n\nunassigned\n\n\nany code point to which no character has been assigned.\n\n\n\n\n\n\n\\p{Co}\n\n\nprivate use\n\n\nany code point reserved for private use.\n\n\n\n\n\n\n\\p{Cs}\n\n\nsurrogate\n\n\none half of a surrogate pair in UTF-16 encoding.\n\n\n\n\n\n\n\\p{C}\n\n\ncontrol\n\n\nformat\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\p{L1}\n\n\nlatin-1\n\n\n\n\n\n\n\n\n\\p{LC}\n\n\nuppercase letter\n\n\nlowercase letter\n\n\n\n\n\n\n\\p{LD}\n\n\nuppercase letter\n\n\nlowercase letter\n\n\n\n\n\n\n\\p{Ll}\n\n\nlowercase letter\n\n\na lowercase letter that has an uppercase variant.\n\n\n\n\n\n\n\\p{Lm}\n\n\nmodifier letter\n\n\na special character that is used like a letter.\n\n\n\n\n\n\n\\p{Lo}\n\n\nother letter\n\n\na letter or ideograph that does not have lowercase and uppercase variants.\n\n\n\n\n\n\n\\p{Lt}\n\n\ntitlecase letter\n\n\na letter that appears at the start of a word when only the first letter of the word is capitalized.\n\n\n\n\n\n\n\\p{Lu}\n\n\nuppercase letter\n\n\nan uppercase letter that has a lowercase variant.\n\n\n\n\n\n\n\\p{L}\n\n\nuppercase letter\n\n\nlowercase letter\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\p{Mc}\n\n\ncombining spacing mark\n\n\na character intended to be combined with another character that takes up extra space (vowel signs in many Eastern languages).\n\n\n\n\n\n\n\\p{Me}\n\n\nenclosing mark\n\n\na character that encloses the character is is combined with (circle, square, keycap, etc.).\n\n\n\n\n\n\n\\p{Mn}\n\n\nnon spacing mark\n\n\na character intended to be combined with another character without taking up extra space (e.g. accents, umlauts, etc.).\n\n\n\n\n\n\n\\p{M}\n\n\nnon spacing mark\n\n\nenclosing mark\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\p{Nd}\n\n\ndecimal digit number\n\n\na digit zero through nine in any script except ideographic scripts.\n\n\n\n\n\n\n\\p{Nl}\n\n\nletter number\n\n\na number that looks like a letter, such as a Roman numeral.\n\n\n\n\n\n\n\\p{No}\n\n\nother number\n\n\na superscript or subscript digit, or a number that is not a digit \n0..9\n (excluding numbers from ideographic scripts).\n\n\n\n\n\n\n\\p{N}\n\n\ndecimal digit number\n\n\nletter number\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\p{Pc}\n\n\nconnector punctuation\n\n\na punctuation character such as an underscore that connects words.\n\n\n\n\n\n\n\\p{Pd}\n\n\ndash punctuation\n\n\nany kind of hyphen or dash.\n\n\n\n\n\n\n\\p{Pe}\n\n\nend punctuation\n\n\nany kind of closing bracket.\n\n\n\n\n\n\n\\p{Pf}\n\n\nfinal quote punctuation\n\n\nany kind of closing quote.\n\n\n\n\n\n\n\\p{Pi}\n\n\ninitial quote punctuation\n\n\nany kind of opening quote.\n\n\n\n\n\n\n\\p{Po}\n\n\nother punctuation\n\n\nany kind of punctuation character that is not a dash, bracket, quote or connector.\n\n\n\n\n\n\n\\p{Ps}\n\n\nstart punctuation\n\n\nany kind of opening bracket.\n\n\n\n\n\n\n\\p{P}\n\n\ndash punctuation\n\n\nstart punctuation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\p{Sc}\n\n\ncurrency symbol\n\n\nany currency sign.\n\n\n\n\n\n\n\\p{Sk}\n\n\nmodifier symbol\n\n\na combining character (mark) as a full character on its own.\n\n\n\n\n\n\n\\p{Sm}\n\n\nmath symbol\n\n\nany mathematical symbol.\n\n\n\n\n\n\n\\p{So}\n\n\nother symbol\n\n\nvarious symbols that are not math symbols, currency signs, or combining characters.\n\n\n\n\n\n\n\\p{S}\n\n\nmath symbol\n\n\ncurrency symbol\n\n\n\n\n\n\n\n\nUnicode Block\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\p{InAegeanNumbers}\n\n\nAegean Numbers\n\n\n\n\n\n\n\\p{InAlphabeticPresentationForms}\n\n\nAlphabetic Presentation Forms\n\n\n\n\n\n\n\\p{InArabic}\n\n\nArabic\n\n\n\n\n\n\n\\p{InArabicPresentationForms-A}\n\n\nArabic Presentation Forms-A\n\n\n\n\n\n\n\\p{InArabicPresentationForms-B}\n\n\nArabic Presentation Forms-B\n\n\n\n\n\n\n\\p{InArmenian}\n\n\nArmenian\n\n\n\n\n\n\n\\p{InArrows}\n\n\nArrows\n\n\n\n\n\n\n\\p{InBasicLatin}\n\n\nBasic Latin\n\n\n\n\n\n\n\\p{InBengali}\n\n\nBengali\n\n\n\n\n\n\n\\p{InBlockElements}\n\n\nBlock Elements\n\n\n\n\n\n\n\\p{InBopomofo}\n\n\nBopomofo\n\n\n\n\n\n\n\\p{InBopomofoExtended}\n\n\nBopomofo Extended\n\n\n\n\n\n\n\\p{InBoxDrawing}\n\n\nBox Drawing\n\n\n\n\n\n\n\\p{InBraillePatterns}\n\n\nBraille Patterns\n\n\n\n\n\n\n\\p{InBuhid}\n\n\nBuhid\n\n\n\n\n\n\n\\p{InByzantineMusicalSymbols}\n\n\nByzantine Musical Symbols\n\n\n\n\n\n\n\\p{InCherokee}\n\n\nCherokee\n\n\n\n\n\n\n\\p{InCJKCompatibilityForms}\n\n\nCJK Compatibility Forms\n\n\n\n\n\n\n\\p{InCJKCompatibilityIdeographs}\n\n\nCJK Compatibility\n\n\n\n\n\n\n\\p{InCJKCompatibilityIdeographs}\n\n\nCJK Compatibility Ideographs\n\n\n\n\n\n\n\\p{InCJKCompatibilityIdeographsSupplement}\n\n\nCJK Compatibility Ideographs Supplement\n\n\n\n\n\n\n\\p{InCJKRadicalsSupplement}\n\n\nCJK Radicals Supplement\n\n\n\n\n\n\n\\p{InCJKSymbolsandPunctuation}\n\n\nCJK Symbols and Punctuation\n\n\n\n\n\n\n\\p{InCJKUnifiedIdeographs}\n\n\nCJK Unified Ideographs\n\n\n\n\n\n\n\\p{InCJKUnifiedIdeographsExtensionA}\n\n\nCJK Unified Ideographs Extension A\n\n\n\n\n\n\n\\p{InCJKUnifiedIdeographsExtensionB}\n\n\nCJK Unified Ideographs Extension B\n\n\n\n\n\n\n\\p{InCombiningDiacriticalMarks}\n\n\nCombining Diacritical Marks\n\n\n\n\n\n\n\\p{InCombiningHalfMarks}\n\n\nCombining Half Marks\n\n\n\n\n\n\n\\p{InCombiningMarksforSymbols}\n\n\nCombining Diacritical Marks for Symbols\n\n\n\n\n\n\n\\p{InControlPictures}\n\n\nControl Pictures\n\n\n\n\n\n\n\\p{InCurrencySymbols}\n\n\nCurrency Symbols\n\n\n\n\n\n\n\\p{InCypriotSyllabary}\n\n\nCypriot Syllabary\n\n\n\n\n\n\n\\p{InCyrillic}\n\n\nCyrillic\n\n\n\n\n\n\n\\p{InCyrillicSupplementary}\n\n\nCyrillic Supplementary\n\n\n\n\n\n\n\\p{InDeseret}\n\n\nDeseret\n\n\n\n\n\n\n\\p{InDevanagari}\n\n\nDevanagari\n\n\n\n\n\n\n\\p{InDingbats}\n\n\nDingbats\n\n\n\n\n\n\n\\p{InEnclosedAlphanumerics}\n\n\nEnclosed Alphanumerics\n\n\n\n\n\n\n\\p{InEnclosedCJKLettersandMonths}\n\n\nEnclosed CJK Letters and Months\n\n\n\n\n\n\n\\p{InEthiopic}\n\n\nEthiopic\n\n\n\n\n\n\n\\p{InGeneralPunctuation}\n\n\nGeneral Punctuation\n\n\n\n\n\n\n\\p{InGeometricShapes}\n\n\nGeometric Shapes\n\n\n\n\n\n\n\\p{InGeorgian}\n\n\nGeorgian\n\n\n\n\n\n\n\\p{InGothic}\n\n\nGothic\n\n\n\n\n\n\n\\p{InGreek}\n\n\nGreek\n\n\n\n\n\n\n\\p{InGreekandCoptic}\n\n\nGreek and Coptic\n\n\n\n\n\n\n\\p{InGreekExtended}\n\n\nGreek Extended\n\n\n\n\n\n\n\\p{InGujarati}\n\n\nGujarati\n\n\n\n\n\n\n\\p{InGurmukhi}\n\n\nGurmukhi\n\n\n\n\n\n\n\\p{InHalfwidthandFullwidthForms}\n\n\nHalfwidth and Fullwidth Forms\n\n\n\n\n\n\n\\p{InHangulCompatibilityJamo}\n\n\nHangul Compatibility Jamo\n\n\n\n\n\n\n\\p{InHangulJamo}\n\n\nHangul Jamo\n\n\n\n\n\n\n\\p{InHangulSyllables}\n\n\nHangul Syllables\n\n\n\n\n\n\n\\p{InHanunoo}\n\n\nHanunoo\n\n\n\n\n\n\n\\p{InHebrew}\n\n\nHebrew\n\n\n\n\n\n\n\\p{InHighPrivateUseSurrogates}\n\n\nHigh Private Use Surrogates\n\n\n\n\n\n\n\\p{InHighSurrogates}\n\n\nHigh Surrogates\n\n\n\n\n\n\n\\p{InHiragana}\n\n\nHiragana\n\n\n\n\n\n\n\\p{InIdeographicDescriptionCharacters}\n\n\nIdeographic Description Characters\n\n\n\n\n\n\n\\p{InIPAExtensions}\n\n\nIPA Extensions\n\n\n\n\n\n\n\\p{InKanbun}\n\n\nKanbun\n\n\n\n\n\n\n\\p{InKangxiRadicals}\n\n\nKangxi Radicals\n\n\n\n\n\n\n\\p{InKannada}\n\n\nKannada\n\n\n\n\n\n\n\\p{InKatakana}\n\n\nKatakana\n\n\n\n\n\n\n\\p{InKatakanaPhoneticExtensions}\n\n\nKatakana Phonetic Extensions\n\n\n\n\n\n\n\\p{InKhmer}\n\n\nKhmer\n\n\n\n\n\n\n\\p{InKhmerSymbols}\n\n\nKhmer Symbols\n\n\n\n\n\n\n\\p{InLao}\n\n\nLao\n\n\n\n\n\n\n\\p{InLatin-1Supplement}\n\n\nLatin-1 Supplement\n\n\n\n\n\n\n\\p{InLatinExtended-A}\n\n\nLatin Extended-A\n\n\n\n\n\n\n\\p{InLatinExtended-B}\n\n\nLatin Extended-B\n\n\n\n\n\n\n\\p{InLatinExtendedAdditional}\n\n\nLatin Extended Additional\n\n\n\n\n\n\n\\p{InLetterlikeSymbols}\n\n\nLetterlike Symbols\n\n\n\n\n\n\n\\p{InLimbu}\n\n\nLimbu\n\n\n\n\n\n\n\\p{InLinearBIdeograms}\n\n\nLinear B Ideograms\n\n\n\n\n\n\n\\p{InLinearBSyllabary}\n\n\nLinear B Syllabary\n\n\n\n\n\n\n\\p{InLowSurrogates}\n\n\nLow Surrogates\n\n\n\n\n\n\n\\p{InMalayalam}\n\n\nMalayalam\n\n\n\n\n\n\n\\p{InMathematicalAlphanumericSymbols}\n\n\nMathematical Alphanumeric Symbols\n\n\n\n\n\n\n\\p{InMathematicalOperators}\n\n\nMathematical Operators\n\n\n\n\n\n\n\\p{InMiscellaneousMathematicalSymbols-A}\n\n\nMiscellaneous Mathematical Symbols-A\n\n\n\n\n\n\n\\p{InMiscellaneousMathematicalSymbols-B}\n\n\nMiscellaneous Mathematical Symbols-B\n\n\n\n\n\n\n\\p{InMiscellaneousSymbols}\n\n\nMiscellaneous Symbols\n\n\n\n\n\n\n\\p{InMiscellaneousSymbolsandArrows}\n\n\nMiscellaneous Symbols and Arrows\n\n\n\n\n\n\n\\p{InMiscellaneousTechnical}\n\n\nMiscellaneous Technical\n\n\n\n\n\n\n\\p{InMongolian}\n\n\nMongolian\n\n\n\n\n\n\n\\p{InMusicalSymbols}\n\n\nMusical Symbols\n\n\n\n\n\n\n\\p{InMyanmar}\n\n\nMyanmar\n\n\n\n\n\n\n\\p{InNumberForms}\n\n\nNumber Forms\n\n\n\n\n\n\n\\p{InOgham}\n\n\nOgham\n\n\n\n\n\n\n\\p{InOldItalic}\n\n\nOld Italic\n\n\n\n\n\n\n\\p{InOpticalCharacterRecognition}\n\n\nOptical Character Recognition\n\n\n\n\n\n\n\\p{InOriya}\n\n\nOriya\n\n\n\n\n\n\n\\p{InOsmanya}\n\n\nOsmanya\n\n\n\n\n\n\n\\p{InPhoneticExtensions}\n\n\nPhonetic Extensions\n\n\n\n\n\n\n\\p{InRunic}\n\n\nRunic\n\n\n\n\n\n\n\\p{InShavian}\n\n\nShavian\n\n\n\n\n\n\n\\p{InSinhala}\n\n\nSinhala\n\n\n\n\n\n\n\\p{InSmallFormVariants}\n\n\nSmall Form Variants\n\n\n\n\n\n\n\\p{InSpacingModifierLetters}\n\n\nSpacing Modifier Letters\n\n\n\n\n\n\n\\p{InSpecials}\n\n\nSpecials\n\n\n\n\n\n\n\\p{InSuperscriptsandSubscripts}\n\n\nSuperscripts and Subscripts\n\n\n\n\n\n\n\\p{InSupplementalArrows-A}\n\n\nSupplemental Arrows-A\n\n\n\n\n\n\n\\p{InSupplementalArrows-B}\n\n\nSupplemental Arrows-B\n\n\n\n\n\n\n\\p{InSupplementalMathematicalOperators}\n\n\nSupplemental Mathematical Operators\n\n\n\n\n\n\n\\p{InSupplementaryPrivateUseArea-A}\n\n\nSupplementary Private Use Area-A\n\n\n\n\n\n\n\\p{InSupplementaryPrivateUseArea-B}\n\n\nSupplementary Private Use Area-B\n\n\n\n\n\n\n\\p{InSyriac}\n\n\nSyriac\n\n\n\n\n\n\n\\p{InTagalog}\n\n\nTagalog\n\n\n\n\n\n\n\\p{InTagbanwa}\n\n\nTagbanwa\n\n\n\n\n\n\n\\p{InTags}\n\n\nTags\n\n\n\n\n\n\n\\p{InTaiLe}\n\n\nTai Le\n\n\n\n\n\n\n\\p{InTaiXuanJingSymbols}\n\n\nTai Xuan Jing Symbols\n\n\n\n\n\n\n\\p{InTamil}\n\n\nTamil\n\n\n\n\n\n\n\\p{InTelugu}\n\n\nTelugu\n\n\n\n\n\n\n\\p{InThaana}\n\n\nThaana\n\n\n\n\n\n\n\\p{InThai}\n\n\nThai\n\n\n\n\n\n\n\\p{InTibetan}\n\n\nTibetan\n\n\n\n\n\n\n\\p{InUgaritic}\n\n\nUgaritic\n\n\n\n\n\n\n\\p{InUnifiedCanadianAboriginalSyllabics}\n\n\nUnified Canadian Aboriginal Syllabics\n\n\n\n\n\n\n\\p{InVariationSelectors}\n\n\nVariation Selectors\n\n\n\n\n\n\n\\p{InVariationSelectorsSupplement}\n\n\nVariation Selectors Supplement\n\n\n\n\n\n\n\\p{InYijingHexagramSymbols}\n\n\nYijing Hexagram Symbols\n\n\n\n\n\n\n\\p{InYiRadicals}\n\n\nYi Radicals\n\n\n\n\n\n\n\\p{InYiSyllables}\n\n\nYi Syllables\n\n\n\n\n\n\n\n\nJava sp\u00e9cifiques\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\p{javaDefined}\n\n\nCharacter.isDefined(ch)\n\n\n\n\n\n\n\\p{javaDigit}\n\n\nCharacter.isDigit(ch)\n\n\n\n\n\n\n\\p{javaIdentifierIgnorable}\n\n\nCharacter.isIdentifierIgnorable(ch)\n\n\n\n\n\n\n\\p{javaISOControl}\n\n\nCharacter.isISOControl(ch)\n\n\n\n\n\n\n\\p{javaJavaIdentifierPart}\n\n\nCharacter.isJavaIdentifierPart(ch)\n\n\n\n\n\n\n\\p{javaJavaIdentifierStart}\n\n\nCharacter.isJavaIdentifierStart(ch)\n\n\n\n\n\n\n\\p{javaLetterOrDigit}\n\n\nCharacter.isLetterOrDigit(ch)\n\n\n\n\n\n\n\\p{javaLetter}\n\n\nCharacter.isLetter(ch)\n\n\n\n\n\n\n\\p{javaLowerCase}\n\n\nCharacter.isLowerCase(ch)\n\n\n\n\n\n\n\\p{javaMirrored}\n\n\nCharacter.isMirrored(ch)\n\n\n\n\n\n\n\\p{javaSpaceChar}\n\n\nCharacter.isSpaceChar(ch)\n\n\n\n\n\n\n\\p{javaTitleCase}\n\n\nCharacter.isTitleCase(ch)\n\n\n\n\n\n\n\\p{javaUnicodeIdentifierPart}\n\n\nCharacter.isUnicodeIdentifierPart(ch)\n\n\n\n\n\n\n\\p{javaUnicodeIdentifierStart}\n\n\nCharacter.isUnicodeIdentifierStart(ch)\n\n\n\n\n\n\n\\p{javaUpperCase}\n\n\nCharacter.isUpperCase(ch)\n\n\n\n\n\n\n\\p{javaWhitespace}\n\n\nCharacter.isWhitespace(ch)",
            "title": "Classes de caract\u00e8res"
        },
        {
            "location": "/classes-de-caracteres/#classes-de-caracteres",
            "text": "",
            "title": "Classes de caract\u00e8res"
        },
        {
            "location": "/classes-de-caracteres/#basique",
            "text": "\\d  [0-9]  Un chiffre  [\\p{Nd}]    \\D  [^0-9]  un caract\u00e8re qui n'est pas un chiffre    \\s  [ \\t\\n\\r\\f\\x0B]  Un caract\u00e8re blanc (espace, tab, new line...)    \\S  [^\\s]  Un caract\u00e8re non blanc    \\w  [a-zA-Z_0-9]  Un caract\u00e8re de mot.  [\\p{Ll}\\p{Lu}\\p{Lt}\\p{Lo}\\p{Nd}\\p{Pc}]    \\W  [^\\w]  Un caract\u00e8re qui n'est pas un caract\u00e8re de mot    \\O   Un chiffre octal    \\c   Caract\u00e8re de contr\u00f4le",
            "title": "Basique"
        },
        {
            "location": "/classes-de-caracteres/#posix",
            "text": "\\p{Alnum}  Alphanumeric characters    \\p{Alpha}  Alphabetic characters    \\p{ASCII}  ASCII characters    \\p{Blank}  Space and tab characters    \\p{Cntrl}  Control characters    \\p{Digit}  Numeric characters    \\p{Graph}  printable and visible (without spaces)    \\p{Lower}  Lower-case alphabetic    \\p{Print}  Printable characters (with spaces)    \\p{Punct}  Punctuation characters    \\p{Space}  All whitespace characters, including line breaks    \\p{Upper}  Upper-case alphabetic    \\p{XDigit}  Hexadecimal digits",
            "title": "POSIX"
        },
        {
            "location": "/classes-de-caracteres/#unicode",
            "text": "\\p{Cc}  control  an ASCII  0x00..0x1F  or Latin-1 0x80..0x9F  control character.    \\p{Cf}  format  invisible formatting indicator.    \\p{Cn}  unassigned  any code point to which no character has been assigned.    \\p{Co}  private use  any code point reserved for private use.    \\p{Cs}  surrogate  one half of a surrogate pair in UTF-16 encoding.    \\p{C}  control  format               \\p{L1}  latin-1     \\p{LC}  uppercase letter  lowercase letter    \\p{LD}  uppercase letter  lowercase letter    \\p{Ll}  lowercase letter  a lowercase letter that has an uppercase variant.    \\p{Lm}  modifier letter  a special character that is used like a letter.    \\p{Lo}  other letter  a letter or ideograph that does not have lowercase and uppercase variants.    \\p{Lt}  titlecase letter  a letter that appears at the start of a word when only the first letter of the word is capitalized.    \\p{Lu}  uppercase letter  an uppercase letter that has a lowercase variant.    \\p{L}  uppercase letter  lowercase letter               \\p{Mc}  combining spacing mark  a character intended to be combined with another character that takes up extra space (vowel signs in many Eastern languages).    \\p{Me}  enclosing mark  a character that encloses the character is is combined with (circle, square, keycap, etc.).    \\p{Mn}  non spacing mark  a character intended to be combined with another character without taking up extra space (e.g. accents, umlauts, etc.).    \\p{M}  non spacing mark  enclosing mark               \\p{Nd}  decimal digit number  a digit zero through nine in any script except ideographic scripts.    \\p{Nl}  letter number  a number that looks like a letter, such as a Roman numeral.    \\p{No}  other number  a superscript or subscript digit, or a number that is not a digit  0..9  (excluding numbers from ideographic scripts).    \\p{N}  decimal digit number  letter number               \\p{Pc}  connector punctuation  a punctuation character such as an underscore that connects words.    \\p{Pd}  dash punctuation  any kind of hyphen or dash.    \\p{Pe}  end punctuation  any kind of closing bracket.    \\p{Pf}  final quote punctuation  any kind of closing quote.    \\p{Pi}  initial quote punctuation  any kind of opening quote.    \\p{Po}  other punctuation  any kind of punctuation character that is not a dash, bracket, quote or connector.    \\p{Ps}  start punctuation  any kind of opening bracket.    \\p{P}  dash punctuation  start punctuation               \\p{Sc}  currency symbol  any currency sign.    \\p{Sk}  modifier symbol  a combining character (mark) as a full character on its own.    \\p{Sm}  math symbol  any mathematical symbol.    \\p{So}  other symbol  various symbols that are not math symbols, currency signs, or combining characters.    \\p{S}  math symbol  currency symbol",
            "title": "Unicode"
        },
        {
            "location": "/classes-de-caracteres/#unicode-block",
            "text": "\\p{InAegeanNumbers}  Aegean Numbers    \\p{InAlphabeticPresentationForms}  Alphabetic Presentation Forms    \\p{InArabic}  Arabic    \\p{InArabicPresentationForms-A}  Arabic Presentation Forms-A    \\p{InArabicPresentationForms-B}  Arabic Presentation Forms-B    \\p{InArmenian}  Armenian    \\p{InArrows}  Arrows    \\p{InBasicLatin}  Basic Latin    \\p{InBengali}  Bengali    \\p{InBlockElements}  Block Elements    \\p{InBopomofo}  Bopomofo    \\p{InBopomofoExtended}  Bopomofo Extended    \\p{InBoxDrawing}  Box Drawing    \\p{InBraillePatterns}  Braille Patterns    \\p{InBuhid}  Buhid    \\p{InByzantineMusicalSymbols}  Byzantine Musical Symbols    \\p{InCherokee}  Cherokee    \\p{InCJKCompatibilityForms}  CJK Compatibility Forms    \\p{InCJKCompatibilityIdeographs}  CJK Compatibility    \\p{InCJKCompatibilityIdeographs}  CJK Compatibility Ideographs    \\p{InCJKCompatibilityIdeographsSupplement}  CJK Compatibility Ideographs Supplement    \\p{InCJKRadicalsSupplement}  CJK Radicals Supplement    \\p{InCJKSymbolsandPunctuation}  CJK Symbols and Punctuation    \\p{InCJKUnifiedIdeographs}  CJK Unified Ideographs    \\p{InCJKUnifiedIdeographsExtensionA}  CJK Unified Ideographs Extension A    \\p{InCJKUnifiedIdeographsExtensionB}  CJK Unified Ideographs Extension B    \\p{InCombiningDiacriticalMarks}  Combining Diacritical Marks    \\p{InCombiningHalfMarks}  Combining Half Marks    \\p{InCombiningMarksforSymbols}  Combining Diacritical Marks for Symbols    \\p{InControlPictures}  Control Pictures    \\p{InCurrencySymbols}  Currency Symbols    \\p{InCypriotSyllabary}  Cypriot Syllabary    \\p{InCyrillic}  Cyrillic    \\p{InCyrillicSupplementary}  Cyrillic Supplementary    \\p{InDeseret}  Deseret    \\p{InDevanagari}  Devanagari    \\p{InDingbats}  Dingbats    \\p{InEnclosedAlphanumerics}  Enclosed Alphanumerics    \\p{InEnclosedCJKLettersandMonths}  Enclosed CJK Letters and Months    \\p{InEthiopic}  Ethiopic    \\p{InGeneralPunctuation}  General Punctuation    \\p{InGeometricShapes}  Geometric Shapes    \\p{InGeorgian}  Georgian    \\p{InGothic}  Gothic    \\p{InGreek}  Greek    \\p{InGreekandCoptic}  Greek and Coptic    \\p{InGreekExtended}  Greek Extended    \\p{InGujarati}  Gujarati    \\p{InGurmukhi}  Gurmukhi    \\p{InHalfwidthandFullwidthForms}  Halfwidth and Fullwidth Forms    \\p{InHangulCompatibilityJamo}  Hangul Compatibility Jamo    \\p{InHangulJamo}  Hangul Jamo    \\p{InHangulSyllables}  Hangul Syllables    \\p{InHanunoo}  Hanunoo    \\p{InHebrew}  Hebrew    \\p{InHighPrivateUseSurrogates}  High Private Use Surrogates    \\p{InHighSurrogates}  High Surrogates    \\p{InHiragana}  Hiragana    \\p{InIdeographicDescriptionCharacters}  Ideographic Description Characters    \\p{InIPAExtensions}  IPA Extensions    \\p{InKanbun}  Kanbun    \\p{InKangxiRadicals}  Kangxi Radicals    \\p{InKannada}  Kannada    \\p{InKatakana}  Katakana    \\p{InKatakanaPhoneticExtensions}  Katakana Phonetic Extensions    \\p{InKhmer}  Khmer    \\p{InKhmerSymbols}  Khmer Symbols    \\p{InLao}  Lao    \\p{InLatin-1Supplement}  Latin-1 Supplement    \\p{InLatinExtended-A}  Latin Extended-A    \\p{InLatinExtended-B}  Latin Extended-B    \\p{InLatinExtendedAdditional}  Latin Extended Additional    \\p{InLetterlikeSymbols}  Letterlike Symbols    \\p{InLimbu}  Limbu    \\p{InLinearBIdeograms}  Linear B Ideograms    \\p{InLinearBSyllabary}  Linear B Syllabary    \\p{InLowSurrogates}  Low Surrogates    \\p{InMalayalam}  Malayalam    \\p{InMathematicalAlphanumericSymbols}  Mathematical Alphanumeric Symbols    \\p{InMathematicalOperators}  Mathematical Operators    \\p{InMiscellaneousMathematicalSymbols-A}  Miscellaneous Mathematical Symbols-A    \\p{InMiscellaneousMathematicalSymbols-B}  Miscellaneous Mathematical Symbols-B    \\p{InMiscellaneousSymbols}  Miscellaneous Symbols    \\p{InMiscellaneousSymbolsandArrows}  Miscellaneous Symbols and Arrows    \\p{InMiscellaneousTechnical}  Miscellaneous Technical    \\p{InMongolian}  Mongolian    \\p{InMusicalSymbols}  Musical Symbols    \\p{InMyanmar}  Myanmar    \\p{InNumberForms}  Number Forms    \\p{InOgham}  Ogham    \\p{InOldItalic}  Old Italic    \\p{InOpticalCharacterRecognition}  Optical Character Recognition    \\p{InOriya}  Oriya    \\p{InOsmanya}  Osmanya    \\p{InPhoneticExtensions}  Phonetic Extensions    \\p{InRunic}  Runic    \\p{InShavian}  Shavian    \\p{InSinhala}  Sinhala    \\p{InSmallFormVariants}  Small Form Variants    \\p{InSpacingModifierLetters}  Spacing Modifier Letters    \\p{InSpecials}  Specials    \\p{InSuperscriptsandSubscripts}  Superscripts and Subscripts    \\p{InSupplementalArrows-A}  Supplemental Arrows-A    \\p{InSupplementalArrows-B}  Supplemental Arrows-B    \\p{InSupplementalMathematicalOperators}  Supplemental Mathematical Operators    \\p{InSupplementaryPrivateUseArea-A}  Supplementary Private Use Area-A    \\p{InSupplementaryPrivateUseArea-B}  Supplementary Private Use Area-B    \\p{InSyriac}  Syriac    \\p{InTagalog}  Tagalog    \\p{InTagbanwa}  Tagbanwa    \\p{InTags}  Tags    \\p{InTaiLe}  Tai Le    \\p{InTaiXuanJingSymbols}  Tai Xuan Jing Symbols    \\p{InTamil}  Tamil    \\p{InTelugu}  Telugu    \\p{InThaana}  Thaana    \\p{InThai}  Thai    \\p{InTibetan}  Tibetan    \\p{InUgaritic}  Ugaritic    \\p{InUnifiedCanadianAboriginalSyllabics}  Unified Canadian Aboriginal Syllabics    \\p{InVariationSelectors}  Variation Selectors    \\p{InVariationSelectorsSupplement}  Variation Selectors Supplement    \\p{InYijingHexagramSymbols}  Yijing Hexagram Symbols    \\p{InYiRadicals}  Yi Radicals    \\p{InYiSyllables}  Yi Syllables",
            "title": "Unicode Block"
        },
        {
            "location": "/classes-de-caracteres/#java-specifiques",
            "text": "\\p{javaDefined}  Character.isDefined(ch)    \\p{javaDigit}  Character.isDigit(ch)    \\p{javaIdentifierIgnorable}  Character.isIdentifierIgnorable(ch)    \\p{javaISOControl}  Character.isISOControl(ch)    \\p{javaJavaIdentifierPart}  Character.isJavaIdentifierPart(ch)    \\p{javaJavaIdentifierStart}  Character.isJavaIdentifierStart(ch)    \\p{javaLetterOrDigit}  Character.isLetterOrDigit(ch)    \\p{javaLetter}  Character.isLetter(ch)    \\p{javaLowerCase}  Character.isLowerCase(ch)    \\p{javaMirrored}  Character.isMirrored(ch)    \\p{javaSpaceChar}  Character.isSpaceChar(ch)    \\p{javaTitleCase}  Character.isTitleCase(ch)    \\p{javaUnicodeIdentifierPart}  Character.isUnicodeIdentifierPart(ch)    \\p{javaUnicodeIdentifierStart}  Character.isUnicodeIdentifierStart(ch)    \\p{javaUpperCase}  Character.isUpperCase(ch)    \\p{javaWhitespace}  Character.isWhitespace(ch)",
            "title": "Java sp\u00e9cifiques"
        },
        {
            "location": "/quantificateurs/",
            "text": "Quantificateurs\n\u00b6\n\n\n\n\n\n\n\n\nQuantifiers\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\nune ou plusieurs occurrences.\n\n\n\n\n\n\n*\n\n\nz\u00e9ro, une ou plusieurs occurrences.\n\n\n\n\n\n\n?\n\n\nz\u00e9ro ou une occurrence.\n\n\n\n\n\n\n{n}\n\n\nexactement n occurrences.\n\n\n\n\n\n\n{n,}\n\n\nau moins n occurrences.\n\n\n\n\n\n\n{n,m}\n\n\nde n \u00e0 m (inclus) occurrences.\n\n\n\n\n\n\n(?>pattern)\n\n\ngroupe atomique.\n\n\n\n\n\n\n\n\nLes quantificateurs pr\u00e9c\u00e9dents sont qualifi\u00e9s de 3 fa\u00e7ons diff\u00e9rentes :\n\n\n\n\n\n\navides\n : le matcheur lit toute la cha\u00eene avant d'essayer la premi\u00e8re concordance.\n  Si l'appariement \u00e9choue, le matcheur recule d'un caract\u00e8re, puis recommence... et ainsi de suite.\n  La recherche du motif .*abc dans la cha\u00eene \nabcxxxxxxabcxxxxabc\n trouve une occurrence de 0 \u00e0 19.\n\n\n\n\n\n\nr\u00e9ticent\n not\u00e9 par \n?\n : la prem\u00e8re r\u00e9ussite est la bonne !\nLa recherche du motif \n.*?abc\n dans la cha\u00eene \nabcxxxxxxabcxxxxabc\n trouve trois occurrences, une de 0 \u00e0 3, une de 3 \u00e0 12 et une 12 de \u00e0 19.\n\n\n\n\n\n\npossessif_\n not\u00e9 par \n+\n : pareil que avide, mais si \u00e7a \u00e9choue, on ne recommence pas !\n  La recherche du motif \n.*+abc\n dans la cha\u00eene \nabcxxxxxxabcxxxxabc\n ne trouve pas de concordance : en effet, \n.*+\n mange tout jusqu'\u00e0 la fin de la cha\u00eene, et donc ce n'est pas suivi de \nabc\n\n\n\n\n\n\n\n\n\n\n\n\nQuantifiers\n\n\n\n\n\n\nMeaning\n\n\n\n\n\n\n\n\n\n\nGreedy\n\n\nReluctant\n\n\nPossessive\n\n\n\n\n\n\n\n\nX?\n\n\nX??\n\n\nX?+\n\n\nX\n, once or not at all\n\n\n\n\n\n\nX*\n\n\nX*?\n\n\nX*+\n\n\nX\n, zero or more times\n\n\n\n\n\n\nX+\n\n\nX+?\n\n\nX++\n\n\nX\n, one or more times\n\n\n\n\n\n\nX{n}\n\n\nX{n}?\n\n\nX{n}+\n\n\nX\n, exactly \nn\n times\n\n\n\n\n\n\nX{n,}\n\n\nX{n,}?\n\n\nX{n,}+\n\n\nX\n, at least \nn\n times\n\n\n\n\n\n\nX{n,m}\n\n\nX{n,m}?\n\n\nX{n,m}+\n\n\nX\n, at least \nn\n but not more than \nm\n times",
            "title": "Quantificateurs"
        },
        {
            "location": "/quantificateurs/#quantificateurs",
            "text": "Quantifiers       0  une ou plusieurs occurrences.    *  z\u00e9ro, une ou plusieurs occurrences.    ?  z\u00e9ro ou une occurrence.    {n}  exactement n occurrences.    {n,}  au moins n occurrences.    {n,m}  de n \u00e0 m (inclus) occurrences.    (?>pattern)  groupe atomique.     Les quantificateurs pr\u00e9c\u00e9dents sont qualifi\u00e9s de 3 fa\u00e7ons diff\u00e9rentes :    avides  : le matcheur lit toute la cha\u00eene avant d'essayer la premi\u00e8re concordance.\n  Si l'appariement \u00e9choue, le matcheur recule d'un caract\u00e8re, puis recommence... et ainsi de suite.\n  La recherche du motif .*abc dans la cha\u00eene  abcxxxxxxabcxxxxabc  trouve une occurrence de 0 \u00e0 19.    r\u00e9ticent  not\u00e9 par  ?  : la prem\u00e8re r\u00e9ussite est la bonne !\nLa recherche du motif  .*?abc  dans la cha\u00eene  abcxxxxxxabcxxxxabc  trouve trois occurrences, une de 0 \u00e0 3, une de 3 \u00e0 12 et une 12 de \u00e0 19.    possessif_  not\u00e9 par  +  : pareil que avide, mais si \u00e7a \u00e9choue, on ne recommence pas !\n  La recherche du motif  .*+abc  dans la cha\u00eene  abcxxxxxxabcxxxxabc  ne trouve pas de concordance : en effet,  .*+  mange tout jusqu'\u00e0 la fin de la cha\u00eene, et donc ce n'est pas suivi de  abc       Quantifiers    Meaning      Greedy  Reluctant  Possessive     X?  X??  X?+  X , once or not at all    X*  X*?  X*+  X , zero or more times    X+  X+?  X++  X , one or more times    X{n}  X{n}?  X{n}+  X , exactly  n  times    X{n,}  X{n,}?  X{n,}+  X , at least  n  times    X{n,m}  X{n,m}?  X{n,m}+  X , at least  n  but not more than  m  times",
            "title": "Quantificateurs"
        },
        {
            "location": "/groupes-de-capture/",
            "text": "Groupes de capture\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\i\n\n\ni\n est entier repr\u00e9sentant le num\u00e9ro du groupe.\n\n\n\n\n\n\n(?: pattern)\n\n\ngroupe pur, ne pouvant \u00eatre captur\u00e9.\n\n\n\n\n\n\n$i\n\n\nd\u00e9signe le \ni\n \u00e8me groupe reconnu (utilisable par le Matcher)\n\n\n\n\n\n\n$\n`\n\n\nBefore matched string\n\n\n\n\n\n\n$'\n\n\nAfter matched string\n\n\n\n\n\n\n$+\n\n\nLast matched string\n\n\n\n\n\n\n$&\n\n\nEntire matched string\n\n\n\n\n\n\n\n\nLe motif en entier, m\u00eame sans parenth\u00e8ses, est le groupe de rang 0.\n\n\n(a((bc)(d)))\n d\u00e9finit 4 groupes :\n\n\n\n\n\n\n\n\nGroupe\n\n\nNum\u00e9ro\n\n\n\n\n\n\n\n\n\n\n(a((bc)(d)))\n\n\n0\n\n\n\n\n\n\n(a((bc)(d)))\n\n\n1\n\n\n\n\n\n\n((bc)(d))\n\n\n2\n\n\n\n\n\n\n(bc)\n\n\n3\n\n\n\n\n\n\n(d)\n\n\n4\n\n\n\n\n\n\n\n\nL'expression \n(\\w\\w)\\1\n permet de reconna\u00eetre des mots tels que \ntiti\n, \ntoto\n, \ntutu\n, \nzozo\n ...\n\n\nUn groupe peut \u00eatre utilis\u00e9 avant son occurrence dans l'expression r\u00e9guli\u00e8re :\n\n(\\2deux|(un))+\n permet de reconna\u00eetre des cha\u00eenes reconnues par l'expression un \n(((un)+(deux){0,1})*)\n.\nLors de l'analyse, au premier passage \n\\2\n n'a pas de valeur, il y a donc \u00e9chec, mais au deuxi\u00e8me passage, il peut avoir \u00e9t\u00e9 affect\u00e9 de \"un\", et l'analyse continue.",
            "title": "Groupes de capture"
        },
        {
            "location": "/groupes-de-capture/#groupes-de-capture",
            "text": "\\i  i  est entier repr\u00e9sentant le num\u00e9ro du groupe.    (?: pattern)  groupe pur, ne pouvant \u00eatre captur\u00e9.    $i  d\u00e9signe le  i  \u00e8me groupe reconnu (utilisable par le Matcher)    $ `  Before matched string    $'  After matched string    $+  Last matched string    $&  Entire matched string     Le motif en entier, m\u00eame sans parenth\u00e8ses, est le groupe de rang 0.  (a((bc)(d)))  d\u00e9finit 4 groupes :     Groupe  Num\u00e9ro      (a((bc)(d)))  0    (a((bc)(d)))  1    ((bc)(d))  2    (bc)  3    (d)  4     L'expression  (\\w\\w)\\1  permet de reconna\u00eetre des mots tels que  titi ,  toto ,  tutu ,  zozo  ...  Un groupe peut \u00eatre utilis\u00e9 avant son occurrence dans l'expression r\u00e9guli\u00e8re : (\\2deux|(un))+  permet de reconna\u00eetre des cha\u00eenes reconnues par l'expression un  (((un)+(deux){0,1})*) .\nLors de l'analyse, au premier passage  \\2  n'a pas de valeur, il y a donc \u00e9chec, mais au deuxi\u00e8me passage, il peut avoir \u00e9t\u00e9 affect\u00e9 de \"un\", et l'analyse continue.",
            "title": "Groupes de capture"
        },
        {
            "location": "/pieges/",
            "text": "Pi\u00e8ges\n\u00b6\n\n\nGroupe vs Ensemble\n\u00b6\n\n\n\n\n[A-Z]+\n : corresponds \u00e0 l'ensemble des caract\u00e8res entre \nA\n et \nZ\n (toutes les lettres en majuscule) = \nABCFGD\n, \nZERTGD\n, \nX\n, \nDJL\n, ...\n\n\n(A-Z)+\n : corresponds \u00e0 la r\u00e9p\u00e9tition du groupe \nA-Z\n = \nA-Z\n, \nA-ZA-ZA-Z\n, \nA-ZA-ZA-ZA-ZA-ZA-Z\n, ...\n\n\n\n\nN\u00e9gation vs D\u00e9but de ligne\n\u00b6\n\n\n\n\n[^IB]\n : corresponds \u00e0 l'ensemble des caract\u00e8res sauf \nI\n et \nB\n : \nA\n, \nC\n, \nD\n, \nE\n\n\n^(IB)\n : corresponds \u00e0 la s\u00e9quence de caract\u00e8res \nIB\n en d\u00e9but de ligne : \nIB\n\n\n\n\nPoint d'interrogation vs R\u00e9p\u00e9tition\n\u00b6\n\n\n\n\n[A?]\n : corresponds aux caract\u00e8res \nA\n et \n?\n : \nA\n, \n?\n\n\n(A?)\n : corresponds \u00e0 un ensemble compos\u00e9 de 0 ou 1 fois \u00e0 \nA\n : \nA\n, vide.\n\n\n\n\nPoint vs Remplace\n\u00b6\n\n\n\n\n[A.]\n : corresponds aux caract\u00e8res \nA\n et \n.\n : \nA\n, \n.\n\n\n(A.)\n : corresponds \u00e0 une s\u00e9quence de 2 caract\u00e8res commen\u00e7ant par \nA\n suivie de n'importe quel caract\u00e8re : \nAA\n, \nA:\n, \nAB\n, ...\n\n\n\n\nPlus vs R\u00e9p\u00e9tition\n\u00b6\n\n\n\n\n[\\d+]\n : corresponds aux caract\u00e8res d\u00e9cimal et \u00e0 \n+\n : \n1\n, \n+\n, \n9\n, \n6\n, ...\n\n\n(\\d+)\n : corresponds \u00e0 une s\u00e9quence compos\u00e9 uniquement de caract\u00e8re d\u00e9cimal : \n132456\n, \n98456\n, \n654138\n, \n2\n, ...\n\n\n\n\nTous vs S\u00e9quence\n\u00b6\n\n\n\n\n[.*]\n : corresponds aux caract\u00e8res \n.\n et \n*\n : \n.\n, \n*\n\n\n(.*)\n : corresponds \u00e0 un ensemble de n'importe quel caract\u00e8re.\n\n\n\n\nBackspace vs Extr\u00e9mit\u00e9\n\u00b6\n\n\n\n\n[\\b]\n : corresponds au caract\u00e8re 'Backspace'.\n\n\n\\b\n : corresponds \u00e0 l'extr\u00e9mit\u00e9 d'un mot.",
            "title": "Pi\u00e8ges"
        },
        {
            "location": "/pieges/#pieges",
            "text": "",
            "title": "Pi\u00e8ges"
        },
        {
            "location": "/pieges/#groupe-vs-ensemble",
            "text": "[A-Z]+  : corresponds \u00e0 l'ensemble des caract\u00e8res entre  A  et  Z  (toutes les lettres en majuscule) =  ABCFGD ,  ZERTGD ,  X ,  DJL , ...  (A-Z)+  : corresponds \u00e0 la r\u00e9p\u00e9tition du groupe  A-Z  =  A-Z ,  A-ZA-ZA-Z ,  A-ZA-ZA-ZA-ZA-ZA-Z , ...",
            "title": "Groupe vs Ensemble"
        },
        {
            "location": "/pieges/#negation-vs-debut-de-ligne",
            "text": "[^IB]  : corresponds \u00e0 l'ensemble des caract\u00e8res sauf  I  et  B  :  A ,  C ,  D ,  E  ^(IB)  : corresponds \u00e0 la s\u00e9quence de caract\u00e8res  IB  en d\u00e9but de ligne :  IB",
            "title": "N\u00e9gation vs D\u00e9but de ligne"
        },
        {
            "location": "/pieges/#point-dinterrogation-vs-repetition",
            "text": "[A?]  : corresponds aux caract\u00e8res  A  et  ?  :  A ,  ?  (A?)  : corresponds \u00e0 un ensemble compos\u00e9 de 0 ou 1 fois \u00e0  A  :  A , vide.",
            "title": "Point d'interrogation vs R\u00e9p\u00e9tition"
        },
        {
            "location": "/pieges/#point-vs-remplace",
            "text": "[A.]  : corresponds aux caract\u00e8res  A  et  .  :  A ,  .  (A.)  : corresponds \u00e0 une s\u00e9quence de 2 caract\u00e8res commen\u00e7ant par  A  suivie de n'importe quel caract\u00e8re :  AA ,  A: ,  AB , ...",
            "title": "Point vs Remplace"
        },
        {
            "location": "/pieges/#plus-vs-repetition",
            "text": "[\\d+]  : corresponds aux caract\u00e8res d\u00e9cimal et \u00e0  +  :  1 ,  + ,  9 ,  6 , ...  (\\d+)  : corresponds \u00e0 une s\u00e9quence compos\u00e9 uniquement de caract\u00e8re d\u00e9cimal :  132456 ,  98456 ,  654138 ,  2 , ...",
            "title": "Plus vs R\u00e9p\u00e9tition"
        },
        {
            "location": "/pieges/#tous-vs-sequence",
            "text": "[.*]  : corresponds aux caract\u00e8res  .  et  *  :  . ,  *  (.*)  : corresponds \u00e0 un ensemble de n'importe quel caract\u00e8re.",
            "title": "Tous vs S\u00e9quence"
        },
        {
            "location": "/pieges/#backspace-vs-extremite",
            "text": "[\\b]  : corresponds au caract\u00e8re 'Backspace'.  \\b  : corresponds \u00e0 l'extr\u00e9mit\u00e9 d'un mot.",
            "title": "Backspace vs Extr\u00e9mit\u00e9"
        }
    ]
}